/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eklinik_bill;

import com.sun.webkit.dom.EventImpl;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import main.RMIConnector;

/**
 *
 * @author Ho Zhen Hong
 */
public class Payment extends javax.swing.JFrame {
    
    //Call library
    RMIConnector rc = new RMIConnector();
    private ServerDetail sd = new ServerDetail();
    //Declaration host and port
    private String host = sd.getHost();
    private int port = sd.getPort();
    
    private DecimalFormat df = new DecimalFormat("0.00");
    private DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S");
    private String txnDate = dateFormat.format(new Date());
    private Month currentMonth = new Month();
    
    private String custId;
    private String billNo;
    private double subtotal;
    private double totalPrice;
    private double grandTotal;
    
    private double gst = 0;
    private double serviceCharge = 0;
    private double discount = 0;
    private double gstAmount = 0;
    private double serviceChargeAmount = 0;
    private double discountAmount = 0;
    private double amount = 0;
    private double change = 0;
    private double rounding = 0;
    
    private ArrayList<ArrayList<String>> billingParameters;
   
    /**
     * Creates new form Payment
     */
    public Payment() {
        initComponents();
        super.pack();
        super.setLocationRelativeTo(null);
        super.setVisible(true);
        super.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        jtf_Subtotal.setEditable(false);
        jtf_GrandTotal.setEditable(false);
        jtf_Change.setEditable(false);
        displayBillDetail();
    }

    /**
     * @return the custId
     */
    public String getCustId() {
        return custId;
    }

    /**
     * @param custId the custId to set
     */
    public void setCustId(String custId) {
        this.custId = custId;
    }

    /**
     * @return the billNo
     */
    public String getBillNo() {
        return billNo;
    }

    /**
     * @param billNo the billNo to set
     */
    public void setBillNo(String billNo) {
        this.billNo = billNo;
    }

    /**
     * @return the totalPrice
     */
    public double getSubtotal() {
        return subtotal;
    }

    /**
     * @param subtotal the totalPrice to set
     */
    public void setSubtotal(double subtotal) {
        this.subtotal = subtotal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        btn_MakePayment = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtf_Subtotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtf_GrandTotal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcb_PaymentMethod = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jtf_Amount = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtf_Change = new javax.swing.JTextField();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btn_MakePayment.setText("Make Payment");
        btn_MakePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MakePaymentActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Payment");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setText("Subtotal :");

        jLabel6.setText("Grand Total :");

        jLabel4.setText("Payment Method :");

        jcb_PaymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Credit Card", "Cheque" }));

        jLabel1.setText("Amount :");

        jtf_Amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_AmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_AmountKeyTyped(evt);
            }
        });

        jLabel5.setText("Change :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtf_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcb_PaymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_Subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_GrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_Change, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_Subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtf_GrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcb_PaymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtf_Change, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jtf_Subtotal.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_MakePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 20, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btn_MakePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Make payment update the customer ledger
     * @param evt 
     */
    private void btn_MakePaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MakePaymentActionPerformed
        // TODO add your handling code here:
        //cash = csh
        //credit card = crc
        //cheque = chq
        
        String debit = jtf_Amount.getText();
        String method = "Cash";
        method = jcb_PaymentMethod.getSelectedItem().toString();
        
        if (method != null){
            switch (method){
                
                case "Cash": 
                    method = "csh";
                    break;
                case "Credit Card":
                    method = "crc";
                    break;
                case "Cheque":
                    method = "chq";
                    break;
            }
        }
        
        if (debit.equals("")){
            String infoMessage = "Please insert an amount first.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);
            
        } else {
            
            try{
                //Get current debit from customer ledger
                String sql1 = "SELECT cl."+ currentMonth.getDebitMonth() +", cl."+ currentMonth.getCreditMonth() +" "
                        + "FROM far_customer_ledger cl, pms_patient_biodata pb "
                        + "WHERE cl.customer_id = '"+ custId +"' "
                        + "AND pb.pmi_no = '"+ custId +"'";
                ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql1);
                String debitMonth = data.get(0).get(0);
                String creditMonth = data.get(0).get(1);
                
                if(debitMonth == null){
                    debitMonth = "0";
                }
                
                if(creditMonth == null){
                    creditMonth = "0";
                }
                
                debitMonth = String.valueOf(Double.parseDouble(debitMonth) + Double.parseDouble(debit));
                creditMonth = String.valueOf(Double.parseDouble(creditMonth) - subtotal + grandTotal);
                
                //Update customer ledger debit
                String sql2 = "UPDATE far_customer_ledger "
                        + "SET pay_method = '"+ method +"', "+currentMonth.getDebitMonth()+" = '"+ debitMonth +"', txn_date = '"+ txnDate +"', "+currentMonth.getCreditMonth()+" = '"+ creditMonth +"' "
                        + "where customer_id = '"+ custId  +"' ";
                rc.setQuerySQL(host, port, sql2);
                
                //Update customer hdr bill
                String sql3 = "UPDATE far_customer_hdr "
                        + "SET payment = 'Paid', txn_date = '"+ txnDate +"', item_amt = '"+ grandTotal +"' "
                        + "WHERE bill_no = '"+ billNo +"'";
                rc.setQuerySQL(host, port, sql3);
                
                for (int i = 0; i < billingParameters.size(); i++){
                    
                    String code = billingParameters.get(i).get(0);
                    String name = billingParameters.get(i).get(1);
                    String value = billingParameters.get(i).get(2);
                    
                    //Update customer dtl
                    String sql4 = "INSERT into far_customer_dtl(bill_no, txn_date, item_cd, item_desc, item_amt, quantity, customer_id) "
                            + "VALUES('"+ billNo +"','"+ txnDate +"','"+ code +"', '"+ name +"', '"+ value +"',  '1', '"+ custId +"' )";
                    rc.setQuerySQL(host, port, sql4);
                }
                
                String infoMessage = "Success add data.";
                JOptionPane.showMessageDialog(null, infoMessage, "Success", JOptionPane.INFORMATION_MESSAGE);
                
                PDF pdf = new PDF(custId,
                                                billNo, 
                                                String.valueOf(df.format(subtotal)),
                                                String.valueOf(df.format(grandTotal)),
                                                String.valueOf(df.format(amount)),
                                                String.valueOf(df.format(change)),
                                                String.valueOf(df.format(gstAmount)),
                                                String.valueOf(df.format(serviceChargeAmount)),
                                                String.valueOf(df.format(discountAmount)),
                                                String.valueOf(df.format(rounding))
                                                );
                pdf.printPaidBill();
                
            } catch (Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
            
            dispose();
        }
    }//GEN-LAST:event_btn_MakePaymentActionPerformed

    /**
     * Allow only numerical value and dot
     * @param evt 
     */
    private void jtf_AmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_AmountKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_PERIOD
                || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        } else{
            if (jtf_Amount.getText().length() > 6)
                evt.consume();
        }
    }//GEN-LAST:event_jtf_AmountKeyTyped

    /**
     * Calculate the change
     * @param evt 
     */
    private void jtf_AmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_AmountKeyReleased
        // TODO add your handling code here:
        if(jtf_Amount.getText().toString().equals(""))
            amount = 0;
        else
            amount = Double.parseDouble(jtf_Amount.getText().toString());
        change = amount - grandTotal;
        jtf_Change.setText(String.valueOf(df.format(change)));
    }//GEN-LAST:event_jtf_AmountKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payment().setVisible(true);
            }
        });
    }
    
    /**
     * Display patient's bill details.
     */
    public void displayBillDetail(){
        try {
            String sql1 = "SELECT param_code, param_name, param_value "
                    + "FROM far_billing_parameter "
                    + "WHERE enable = 'yes'";
            billingParameters = rc.getQuerySQL(host, port, sql1);
            
            for (int i = 0; i < billingParameters.size(); i++){
                if (billingParameters.get(i).get(1).equalsIgnoreCase("GST"))
                    gst = Double.parseDouble(billingParameters.get(i).get(2));
                else if (billingParameters.get(i).get(1).equalsIgnoreCase("Service Charge"))
                    serviceCharge = Double.parseDouble(billingParameters.get(i).get(2));
                else if (billingParameters.get(i).get(1).equalsIgnoreCase("Discount"))
                    discount = Double.parseDouble(billingParameters.get(i).get(2));
            }
                
            discountAmount = subtotal * discount;
            totalPrice =  subtotal - discountAmount;
            gstAmount = totalPrice * gst;
            serviceChargeAmount = totalPrice * serviceCharge;
            grandTotal = totalPrice + gstAmount + serviceChargeAmount;
            //Round the grand total
            double tmp = Math.round(grandTotal * 20) / 20.0;
            rounding = tmp - grandTotal;
            grandTotal = tmp;
            
            jtf_Subtotal.setText(String.valueOf(df.format(totalPrice)));
            jtf_GrandTotal.setText(String.valueOf(df.format(grandTotal)));
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_MakePayment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JComboBox<String> jcb_PaymentMethod;
    private javax.swing.JTextField jtf_Amount;
    private javax.swing.JTextField jtf_Change;
    private javax.swing.JTextField jtf_GrandTotal;
    private javax.swing.JTextField jtf_Subtotal;
    // End of variables declaration//GEN-END:variables
}
